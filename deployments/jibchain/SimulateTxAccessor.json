{
  "address": "0x1D94e4733E88AEB54fdD32a108dB0B5bEC8Af70E",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "simulate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "estimate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "returnData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaca3012fdbbda55ad624deb5463ff6eaf5d998ff4dad547e8085ffdd16fd2d52",
  "receipt": {
    "to": "0x914d7Fec6aaC8cd542e72Bca78B30650d45643d7",
    "from": "0xF6d422b14a365FD8AbC6126DD08b0029bFa6cb75",
    "contractAddress": null,
    "transactionIndex": 45,
    "gasUsed": "237919",
    "logsBloom": "0x
    "blockHash": "0xa8a42f525082e0d1f9f9dc814f5e68649027ae7d29b85767a53691bc1aae40ea",
    "transactionHash": "0xaca3012fdbbda55ad624deb5463ff6eaf5d998ff4dad547e8085ffdd16fd2d52",
    "logs": [],
    "blockNumber": 2629065,
    "cumulativeGasUsed": "1611981",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bf606bc4a6ea644bee9a9d15ecf9936d",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"simulate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"estimate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{\"simulate(address,uint256,bytes,uint8)\":{\"details\":\"Executes the specified operation {Call, DelegateCall} and returns operation-specific data.      Has to be called via delegatecall.      This returns the data equal to `abi.encode(uint256(estimate), bool(success), bytes(returnData))`.      Specifically, the returndata will be:      `estimate:uint256 || success:bool || returnData.length:uint256 || returnData:bytes`.\",\"params\":{\"data\":\"Data payload.\",\"operation\":\"Operation type {Call, DelegateCall}.\",\"to\":\"Destination address .\",\"value\":\"Native token value.\"},\"returns\":{\"estimate\":\"Gas used.\",\"returnData\":\"Return data.\",\"success\":\"Success boolean value.\"}}},\"title\":\"Simulate Transaction Accessor.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"simulate(address,uint256,bytes,uint8)\":{\"notice\":\"Simulates a Safe transaction and returns the used gas, success boolean and the return data.\"}},\"notice\":\"Can be used with StorageAccessible to simulate Safe transactions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/accessors/SimulateTxAccessor.sol\":\"SimulateTxAccessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/accessors/SimulateTxAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport {Executor, Enum} from \\\"../base/Executor.sol\\\";\\n\\n/**\\n * @title Simulate Transaction Accessor.\\n * @notice Can be used with StorageAccessible to simulate Safe transactions.\\n * @author Richard Meissner - @rmeissner\\n */\\ncontract SimulateTxAccessor is Executor {\\n    address private immutable ACCESSOR_SINGLETON;\\n\\n    constructor() {\\n        ACCESSOR_SINGLETON = address(this);\\n    }\\n\\n    /**\\n     * @notice Modifier to make a function callable via delegatecall only.\\n     * If the function is called via a regular call, it will revert.\\n     */\\n    modifier onlyDelegateCall() {\\n        require(address(this) != ACCESSOR_SINGLETON, \\\"SimulateTxAccessor should only be called via delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Simulates a Safe transaction and returns the used gas, success boolean and the return data.\\n     * @dev Executes the specified operation {Call, DelegateCall} and returns operation-specific data.\\n     *      Has to be called via delegatecall.\\n     *      This returns the data equal to `abi.encode(uint256(estimate), bool(success), bytes(returnData))`.\\n     *      Specifically, the returndata will be:\\n     *      `estimate:uint256 || success:bool || returnData.length:uint256 || returnData:bytes`.\\n     * @param to Destination address .\\n     * @param value Native token value.\\n     * @param data Data payload.\\n     * @param operation Operation type {Call, DelegateCall}.\\n     * @return estimate Gas used.\\n     * @return success Success boolean value.\\n     * @return returnData Return data.\\n     */\\n    function simulate(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation\\n    ) external onlyDelegateCall returns (uint256 estimate, bool success, bytes memory returnData) {\\n        uint256 startGas = gasleft();\\n        success = execute(to, value, data, operation, gasleft());\\n        estimate = startGas - gasleft();\\n        /* solhint-disable no-inline-assembly */\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Load free memory location\\n            let ptr := mload(0x40)\\n            // We allocate memory for the return data by setting the free memory location to\\n            // current free memory location + data size + 32 bytes for data size value\\n            mstore(0x40, add(ptr, add(returndatasize(), 0x20)))\\n            // Store the size\\n            mstore(ptr, returndatasize())\\n            // Store the data\\n            returndatacopy(add(ptr, 0x20), 0, returndatasize())\\n            // Point the return data to the correct memory location\\n            returnData := ptr\\n        }\\n        /* solhint-enable no-inline-assembly */\\n    }\\n}\\n\",\"keccak256\":\"0x5bb92fe82690ab4f5d9b4eb8202d1b4ce3b568d3970903eaa20ee07cb3cdab5d\",\"license\":\"LGPL-3.0-only\"},\"contracts/base/Executor.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\nimport {Enum} from \\\"../libraries/Enum.sol\\\";\\n\\n/**\\n * @title Executor - A contract that can execute transactions\\n * @author Richard Meissner - @rmeissner\\n */\\nabstract contract Executor {\\n    /**\\n     * @notice Executes either a delegatecall or a call with provided parameters.\\n     * @dev This method doesn't perform any sanity check of the transaction, such as:\\n     *      - if the contract at `to` address has code or not\\n     *      It is the responsibility of the caller to perform such checks.\\n     * @param to Destination address.\\n     * @param value Ether value.\\n     * @param data Data payload.\\n     * @param operation Operation type.\\n     * @return success boolean flag indicating if the call succeeded.\\n     */\\n    function execute(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        if (operation == Enum.Operation.DelegateCall) {\\n            /* solhint-disable no-inline-assembly */\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\\n            }\\n            /* solhint-enable no-inline-assembly */\\n        } else {\\n            /* solhint-disable no-inline-assembly */\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\\n            }\\n            /* solhint-enable no-inline-assembly */\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e0179af7f1475fead89a26badd804382f1661e82e0cc27f3cfa6b08ac970862\",\"license\":\"LGPL-3.0-only\"},\"contracts/libraries/Enum.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/**\\n * @title Enum - Collection of enums used in Safe contracts.\\n * @author @safe-global/safe-protocol\\n */\\nlibrary Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\",\"keccak256\":\"0x5c98a72bda2295b5950c7a845c435afd41b3edf3d6debf0968a17b6889d5617a\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c6103526100656000398061017052506103526000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c5fb21114610030575b600080fd5b6100de6004803603608081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561008d57600080fd5b82018360208201111561009f57600080fd5b803590602001918460018302840111640100000000831117156100c157600080fd5b9091929391929390803560ff169060200190929190505050610169565b60405180848152602001831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561012c578082015181840152602081019050610111565b50505050905090810190601f1680156101595780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60008060607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610213576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806102e46039913960400191505060405180910390fd5b60005a9050610269898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050885a610297565b92505a8103935060405160203d0181016040523d81523d6000602083013e8092505050955095509592505050565b60006001808111156102a557fe5b8360018111156102b157fe5b14156102ca576000808551602087018986f490506102da565b600080855160208701888a87f190505b9594505050505056fe53696d756c61746554784163636573736f722073686f756c64206f6e6c792062652063616c6c6564207669612064656c656761746563616c6ca264697066735822122036afbcba92b1343afd9e071200e23b2e0499f115db8a44b62b852949514df08e64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c5fb21114610030575b600080fd5b6100de6004803603608081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561008d57600080fd5b82018360208201111561009f57600080fd5b803590602001918460018302840111640100000000831117156100c157600080fd5b9091929391929390803560ff169060200190929190505050610169565b60405180848152602001831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561012c578082015181840152602081019050610111565b50505050905090810190601f1680156101595780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60008060607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610213576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806102e46039913960400191505060405180910390fd5b60005a9050610269898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050885a610297565b92505a8103935060405160203d0181016040523d81523d6000602083013e8092505050955095509592505050565b60006001808111156102a557fe5b8360018111156102b157fe5b14156102ca576000808551602087018986f490506102da565b600080855160208701888a87f190505b9594505050505056fe53696d756c61746554784163636573736f722073686f756c64206f6e6c792062652063616c6c6564207669612064656c656761746563616c6ca264697066735822122036afbcba92b1343afd9e071200e23b2e0499f115db8a44b62b852949514df08e64736f6c63430007060033",
  "devdoc": {
    "author": "Richard Meissner - @rmeissner",
    "kind": "dev",
    "methods": {
      "simulate(address,uint256,bytes,uint8)": {
        "details": "Executes the specified operation {Call, DelegateCall} and returns operation-specific data.      Has to be called via delegatecall.      This returns the data equal to `abi.encode(uint256(estimate), bool(success), bytes(returnData))`.      Specifically, the returndata will be:      `estimate:uint256 || success:bool || returnData.length:uint256 || returnData:bytes`.",
        "params": {
          "data": "Data payload.",
          "operation": "Operation type {Call, DelegateCall}.",
          "to": "Destination address .",
          "value": "Native token value."
        },
        "returns": {
          "estimate": "Gas used.",
          "returnData": "Return data.",
          "success": "Success boolean value."
        }
      }
    },
    "title": "Simulate Transaction Accessor.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "simulate(address,uint256,bytes,uint8)": {
        "notice": "Simulates a Safe transaction and returns the used gas, success boolean and the return data."
      }
    },
    "notice": "Can be used with StorageAccessible to simulate Safe transactions.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}